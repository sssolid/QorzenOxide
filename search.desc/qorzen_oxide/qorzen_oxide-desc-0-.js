searchState.loadedDescShard("qorzen_oxide", 0, "Qorzen Core - A modular plugin-based system with async …\nCreate an API route definition with documentation\nAdvanced concurrency management system with thread pools …\nConfiguration management system with hot-reload support\nConvenience macros for event handling\nEvent-driven architecture system with async event bus\nExport the plugin creation function for native plugins\nFile management system with async operations and monitoring\nStructured logging system with multiple outputs and …\nCreate a menu item for a plugin with hierarchical support\nCreate a plugin with basic metadata using a more ergonomic …\nCreate a search provider for a plugin with convenient …\nAsync task management system with progress tracking and …\nCreate a UI component for a plugin with validation\nUtility functions and helpers for Qorzen Core\nEnhanced Application Core with all systems integrated\nGets current session\nGets current user\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets current application health\nGets application state\nGets application statistics\nEnhanced initialization with complete system setup\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new application core\nGraceful shutdown of all systems\nWaits for shutdown signal\nCreates application with custom config file\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConfiguration change detector\nConfiguration change event\nConfiguration merger handles merging values from multiple …\nConfiguration store trait - conditional Send requirement\nConfiguration synchronization manager\nConfiguration watcher for change notifications\nConfiguration tiers in order of precedence (lowest to …\nMemory-based configuration store for runtime values\nMain tiered configuration manager\nConfiguration validation error\nConfiguration validation rule\nValidation rule set for configuration values\nAdds a configuration store for a specific tier\nAdds a validation rule\nReturns all tiers in precedence order\nClears the configuration cache\nDeletes a configuration value from a specific tier\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a configuration value by merging across all tiers\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLists all keys with a given prefix\nMerges configuration values from multiple tiers\nCreates a new tiered configuration manager\nReturns the precedence value (higher = more important)\nSets a configuration value in a specific tier\nSubscribes to configuration changes\nSyncs configuration with remote server\nValidates all configuration values\nContains the error value\nContains the success value\nExtension trait for Results to add context\nCreates an authentication error\nCreates an authorization error\nAdds a cause to the error chain\nCreates a configuration error\nSets the correlation ID\nCreates a file operation error\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the error is critical\nCreates a manager operation error\nAdds metadata to the error\nCreates a new error with the specified kind and message\nCreates a permission error\nCreates a platform-specific error\nCreates a plugin error\nSets the plugin ID\nSets the error severity\nChecks if the error should be handled automatically\nSets the error source\nCreates a task error\nCreates a timeout error\nAdds context to an error\nSets the correlation ID\nAdds metadata collection to the error\nSets the plugin ID\nSets the error source\nCritical priority events (system alerts)\nBase event trait that all events must implement\nEvent bus configuration\nEvent bus manager\nEvent subscription filter\nEvent handler trait for processing events\nEvent priority levels\nEvent statistics\nEvent subscription\nHigh priority events (user actions)\nLow priority events (background processing)\nNormal priority events\nWhether subscription is active\nCurrent active subscriptions\nGet event as Any for downcasting\nAverage processing time in milliseconds\nBatch size for processing events\nGet event correlation ID if available\nWhen subscription was created\nDefault timeout for event processing\nWhether to enable metrics collection\nWhether to enable event persistence\nGet the event type identifier\nGet event types this handler is interested in\nEvent types to match (empty means all)\nEvents by priority\nEvents by type\nFilter for events\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet event bus statistics\nHandle an event\nSubscription ID\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this handler should receive all events (wildcard)\nCheck if an event matches this filter\nMaximum retry delay\nGet event metadata\nSubscription metadata\nMetadata filters\nMinimum priority level\nGet handler name for debugging\nCreate a new event bus manager\nCreate a new event filter\nGet event priority (default is normal)\nGet handler priority (affects processing order)\nPublish an event to the bus\nQueue capacity\nQueue size\nEvent sender channel\nWhether this event should be persisted\nGet the event source\nSource patterns to match\nSubscribe to events with a filter\nSubscribe with a handler\nGet event timestamp (default implementation)\nTotal events failed\nTotal events processed\nTotal events published\nUnsubscribe from events\nAdd event type filter\nAdd metadata filter\nSet minimum priority\nAdd source pattern filter\nNumber of worker threads\nArchive/compressed files\nAudio files\nBinary executable files\nOperation was cancelled\nOperation completed successfully\nFile was created\nData files (JSON, CSV, XML, databases)\nFile was deleted\nDocument files (PDF, Word, etc.)\nOperation failed\nFile change event\nFile change types\nMain file manager\nFile metadata information\nFile operation options\nFile operation progress information\nFile operation status\nFile type enumeration based on content and extension\nFile watcher for monitoring file system changes\nImage files\nOperation is in progress\nFile metadata changed\nFile was modified\nOperation is paused\nOperation is pending\nFile was renamed/moved\nText files (plain text, code, configuration)\nUnknown file type\nVideo files\nLast access time\nWhether to use atomic operations\nWhether to calculate checksums\nCalculate SHA-256 hash of a file\nCalculate and store file hash\nClean up temporary files\nCompress file using configured compression\nCopy file\nCreate directory\nWhether to create parent directories\nCreate temporary file\nCreation time\nCurrent file being processed\nDecompress file\nDelete directory\nDelete file\nDestination path\nEstimated completion time\nEvent type\nCheck if file exists\nGet file size\nFile type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDetect file type from extension\nCreate file metadata from path\nGet active file operations\nGet file extension as lowercase string\nGet file metadata\nGet temp directory usage\nFile hash (SHA-256)\nWhether file is hidden\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList directory contents\nAdditional metadata\nAdditional event data\nGet MIME type for the file type\nMIME type\nLast modification time\nMove/rename file\nCreate a new file watcher\nCreate a new file manager\nOperation type\nOperation ID\nWhether to overwrite existing files\nFile path\nPath that changed\nFile permissions (Unix-style)\nFile permissions to set\nWhether to preserve timestamps\nBytes processed so far\nRead file contents\nRead file contents as string\nWhether file is read-only\nJoin paths safely, preventing directory traversal\nSanitize filename by removing/replacing invalid characters\nSet event bus for publishing file events\nFile size in bytes\nSource path\nSource of the event\nOperation start time\nOperation status\nSubscribe to file change events\nSubscribe to file change events\nOperation timeout\nWhen the change occurred\nTotal bytes to process\nStop watching a path\nStop watching a path\nStart watching a path\nStart watching a path for changes\nWrite data to file\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nManaged state container for managers\nCore trait for all system managers - conditional Send …\nAdds metadata\nAdds metadata to the status\nReturns dependencies\nReturns manager description\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets current configuration\nReturns current health\nPerforms health check\nReturns the manager ID\nReturns the manager ID\nInitializes the manager\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if manager is essential for system operation\nReturns the manager name\nReturns the manager name\nCreates a new managed state\nCreates a new manager status\nPauses the manager\nReturns platform requirements\nReturns initialization priority\nReloads configuration at runtime\nReturns required permissions\nRestarts the manager\nResumes the manager\nSets the health status\nSets the health status\nSets a status message\nSets a status message\nSets the manager state\nShuts down the manager\nReturns current state\nReturns current status\nReturns current status\nChecks if manager supports runtime reloading\nUpdates configuration\nUpdates metrics\nUpdates the metrics\nUpdates the manager state\nReturns manager version\nMock filesystem implementation for testing\nPlatform capabilities detection\nMain platform manager that coordinates all platform …\nPlatform provider collection\nReturns platform capabilities\nReturns database provider\nDetects platform capabilities\nReturns filesystem provider\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns network provider\nCreates a new platform manager with platform-specific …\nReturns storage provider\nDatabase operations - made dyn compatible by removing …\nDatabase migration\nDatabase query result\nDatabase row\nDatabase transaction\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFile information\nFile metadata\nFile system operations\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNative filesystem implementation\nNative network implementation\nNative storage implementation (using filesystem)\nSQLite database implementation\nPlatform cleanup\nCreates native platform providers\nDetects native platform capabilities\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nPlatform initialization\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNetwork operations\nNetwork request\nNetwork response\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStorage operations (key-value)\nAPI documentation\nAPI example\nAPI parameter definition\nAPI request structure\nAPI response definition\nAPI route definition\nTypes of UI components\nDatabase permissions for plugins\nDependency resolver for plugins\nEvent handler registration\nHTTP methods\nMenu item for navigation\nParameter types\nSupported platforms for plugins\nMain plugin trait that all plugins must implement\nAPI client for plugin to core communication\nAPI provider for plugins\nPlugin configuration schema\nPlugin execution context\nDatabase access for plugins with sandboxing\nPlugin dependency specification\nFile system access for plugins with sandboxing\nPlugin information structure\nPlugin loader trait for different loading mechanisms\nMain plugin manager\nPlugin registry for managing loaded plugins\nPlugin sandbox for security\nRate limiting configuration\nResource limits for plugin sandboxing\nUI component provided by a plugin\nPlugin validation result\nConfiguration validation rule\nValidation rule types\nGet API routes provided by this plugin\nCheck if an operation is allowed\nCheck if current user has permission\nCheck version compatibility\nCreate an API client for a plugin\nGet event handlers provided by this plugin\nExecute a database query with permission checks\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a plugin by ID\nGet a configuration value\nGet the current user\nGet menu items from all plugins\nGet UI components from all plugins\nHandle an API request\nHandle an event\nGet plugin information\nInitialize the plugin\nInitialize all plugins\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList all plugin IDs\nGet the load order for plugins\nLoad a plugin from the given path\nLoad a plugin from a path\nGet menu items provided by this plugin\nCreate a new plugin sandbox\nCreate a new dependency resolver\nCreate a new plugin manager\nCreate a new API provider\nCreate a new API client for a plugin\nCreate a new database access wrapper for a plugin\nCreate a new file system access wrapper for a plugin\nCreate a new plugin registry\nQuery the database with permission checks\nRead a file with sandboxing\nRegister a plugin\nRender a UI component\nRender a component from a plugin\nGet required dependencies\nGet required permissions\nResolve dependencies for a plugin\nSet a configuration value\nGet settings schema for configuration\nShutdown the plugin\nGet UI components provided by this plugin\nUnload a plugin\nUnload a plugin\nValidate a plugin before loading\nWrite a file with sandboxing\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCorrelation ID for tracking related operations\nUnique identifier for managers, tasks, events, etc.\nGeneric metadata container\nAction button styles\nAnimation configuration\nApplication state for UI\nBadge for navigation items\nResponsive breakpoint configuration\nColor palette\nFooter configuration\nFooter link\nHeader configuration\nMain content area configuration\nNavigation item\nNotification\nNotification action\nNotification types\nPlatform types for UI adaptation\nPlugin panel in sidebar\nQuick action button\nShadow configuration\nSidebar configuration\nSpacing configuration\nTheme configuration\nTypography configuration\nUI layout configuration\nUI Layout Manager\nMain app entry point - simple wrapper for the App component\nGets the current layout\nGets the current theme\nGets default layout\nGets default theme\nFinds appropriate layout for user and platform\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a layout by ID\nGets a theme by ID\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new UI layout manager\nRegisters a layout\nRegisters a theme\nSets the current layout\nSets the current theme\nMain application component that sets up routing and global …\nRoute definitions with proper authentication guards\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAlert/Banner component\nProperties for the [<code>Alert</code>] component.\nBadge component\nProperties for the [<code>Badge</code>] component.\nButton component with consistent styling\nProperties for the [<code>Button</code>] component.\nCard component\nProperties for the [<code>Card</code>] component.\nDropdown menu component\nProperties for the [<code>Dropdown</code>] component.\nForm field wrapper component\nProperties for the [<code>FormField</code>] component.\nInput component with consistent styling\nProperties for the [<code>Input</code>] component.\nLabel component\nProperties for the [<code>Label</code>] component.\nModal component\nProperties for the [<code>Modal</code>] component.\nLoading spinner component\nProperties for the [<code>Spinner</code>] component.\nTab item data structure\nTabs component\nProperties for the [<code>Tabs</code>] component.\nToggle/Switch component\nProperties for the [<code>Toggle</code>] component.\nTooltip component (simple implementation)\nProperties for the [<code>Tooltip</code>] component.\nCreate a builder for building <code>ButtonProps</code>. On the builder, …\nCreate a builder for building <code>InputProps</code>. On the builder, …\nCreate a builder for building <code>LabelProps</code>. On the builder, …\nCreate a builder for building <code>FormFieldProps</code>. On the …\nCreate a builder for building <code>ModalProps</code>. On the builder, …\nCreate a builder for building <code>AlertProps</code>. On the builder, …\nCreate a builder for building <code>BadgeProps</code>. On the builder, …\nCreate a builder for building <code>SpinnerProps</code>. On the …\nCreate a builder for building <code>CardProps</code>. On the builder, …\nCreate a builder for building <code>DropdownProps</code>. On the …\nCreate a builder for building <code>TabsProps</code>. On the builder, …\nCreate a builder for building <code>ToggleProps</code>. On the builder, …\nCreate a builder for building <code>TooltipProps</code>. On the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nResponsive layout breakpoints (matching Tailwind defaults)\nFooter component\nMain header component\nMain layout component that provides the overall page …\nLayout configuration props\nMain sidebar component\nCreate a builder for building <code>LayoutProps</code>. On the builder, …\nChildren to render in the main content area\nOptional custom class for the layout\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether to show the footer\nWhether to show the header\nWhether to show the sidebar\nCommon layout utilities\nCheck if the current viewport is desktop-sized\nCheck if the current viewport is mobile-sized\nCheck if the current viewport is tablet-sized\nGet responsive classes based on viewport\nMain admin page component\nMain dashboard component\nEmpty state component for pages\nProperties for the [<code>EmptyState</code>] component.\nLogin page component\n404 Not Found page component\nError state component for pages\nProperties for the [<code>PageError</code>] component.\nLoading skeleton component for pages\nCommon page wrapper component\nProperties for the [<code>PageWrapper</code>] component.\nPlugin view component for individual plugin pages\nMain plugins page component\nProfile page component\nMain settings page component\nStat card component for dashboards\nProperties for the [<code>StatCard</code>] component.\nTrend direction for stat cards\nCreate a builder for building <code>PageWrapperProps</code>. On the …\nCreate a builder for building <code>PageErrorProps</code>. On the …\nCreate a builder for building <code>EmptyStateProps</code>. On the …\nCreate a builder for building <code>StatCardProps</code>. On the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAuthenticated layout wrapper that checks authentication …\nProperties for the [<code>AuthenticatedLayout</code>] component.\nRoute component implementations\nProps\nProperties for the [<code>NotFound</code>] component.\nPermission guard component\nProperties for the [<code>PermissionGuard</code>] component.\nProps\nProps\nProperties for the [<code>PluginPage</code>] component.\nProperties for the [<code>Plugin</code>] component.\nApplication routes with authentication and authorization\nCreate a builder for building <code>PluginProps</code>. On the builder, …\nCreate a builder for building <code>PluginPageProps</code>. On the …\nCreate a builder for building <code>NotFoundProps</code>. On the …\nCreate a builder for building <code>AuthenticatedLayoutProps</code>. On …\nCreate a builder for building <code>PermissionGuardProps</code>. On the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNavigation utilities\nCheck if current route matches the given route\nGet route icon (for navigation menus)\nGet route title for display\nProps\nProperties for the [<code>AppStateProvider</code>] component.\nCreate a builder for building <code>AppStateProviderProps</code>. On …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHook to get the dispatch function (write-only)\nHook to get the current app state (read-only)\nHook to get both state and dispatch - use sparingly to …\nHook to get current user\nHook to check permissions\nHook to check if user is authenticated\nHook for login functionality\nHook for logout functionality\nHook for mobile menu state management\nHook for notifications management\nHook for sidebar state management\nCross-platform time utilities that work on both native and …\nCreate a duration from days\nCreate a duration from hours\nCreate a duration from milliseconds\nCreate a duration from seconds\nReturns the argument unchanged.\nCreate a DateTime from milliseconds since epoch\nCalls <code>U::from(self)</code>.\nGet current UTC time - works on both native and WASM\nGet current timestamp as milliseconds since epoch\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")