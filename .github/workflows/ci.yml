# .github/workflows/ci.yml
name: CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  SYS_DEPS: "libglib2.0-dev libgirepository1.0-dev pkg-config libgtk-3-dev libpango1.0-dev libcairo2-dev libatk1.0-dev libgdk-pixbuf2.0-dev libsoup-3.0-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev"

jobs:
  check:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y $SYS_DEPS
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - run: cargo check --all-features

  test:
    strategy:
      matrix:
        rust: [ stable, beta, nightly ]
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
        exclude:
          - rust: beta
            os: windows-latest
          - rust: beta
            os: macOS-latest
          - rust: nightly
            os: windows-latest
          - rust: nightly
            os: macOS-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y $SYS_DEPS
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.rust }}-cargo-
      - run: cargo test --all-features --workspace

  fmt:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y $SYS_DEPS
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - run: cargo clippy --all-features --workspace -- -D warnings

  docs:
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y $SYS_DEPS
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-docs-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-docs-cargo-
      - run: cargo doc --all-features --no-deps --workspace
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc

  security:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: |
          cargo install cargo-audit
          cargo install cargo-deny
      - run: cargo audit
      - run: cargo deny check

  coverage:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y $SYS_DEPS
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo install cargo-tarpaulin
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-coverage-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-coverage-cargo-
      - run: cargo tarpaulin --all-features --workspace --timeout 120 --out Xml
      - run: test -f cobertura.xml
      - uses: codecov/codecov-action@v3
        with:
          file: cobertura.xml
          fail_ci_if_error: true

  build:
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y $SYS_DEPS libxdo-dev
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-x86_64-unknown-linux-gnu-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-x86_64-unknown-linux-gnu-cargo-
      - run: cargo build --release --target x86_64-unknown-linux-gnu --features desktop --bin qorzen_desktop
      - uses: actions/upload-artifact@v4
        with:
          name: qorzen-linux-amd64
          path: target/x86_64-unknown-linux-gnu/release/qorzen_desktop

  deploy:
    runs-on: ubuntu-22.04
    needs: [ build ]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    env:
      SYS_DEPS: |
        libglib2.0-dev
        libgirepository1.0-dev
        pkg-config
        libgtk-3-dev
        libpango1.0-dev
        libcairo2-dev
        libatk1.0-dev
        libgdk-pixbuf2.0-dev
        libsoup-3.0-dev
        libjavascriptcoregtk-4.1-dev
        libwebkit2gtk-4.1-dev

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
      - run: rustup target add wasm32-unknown-unknown

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y $SYS_DEPS

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
          key: ${{ runner.os }}-cargo-trunk-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-trunk-

      - name: Install Trunk from source
        run: |
          cargo install trunk --locked --force
        shell: bash

      - name: Build WASM App
        run: |
          trunk build --release
        shell: bash

      - uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DO_HOST }}
          username: root
          key: ${{ secrets.DO_SSH_KEY }}
          source: "dist/*"
          target: "/var/www/qorzen"

      - uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DO_HOST }}
          username: root
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            nginx -t && systemctl reload nginx
