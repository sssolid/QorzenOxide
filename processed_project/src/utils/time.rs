use chrono::{DateTime,Duration,Utc};pub struct Time;impl Time{pub fn now()->DateTime<Utc>{#[cfg(not(target_arch="wasm32"))]{Utc::now()}#[cfg(target_arch="wasm32")]{let millis=js_sys::Date::now()as i64;match DateTime::from_timestamp_millis(millis){Some(dt)=>dt,None=>{web_sys::console::error_1(&"Failed to create DateTime from JS timestamp".into(),);DateTime::from_timestamp(1640995200,0).unwrap()}}}}pub fn now_millis()->u64{#[cfg(not(target_arch="wasm32"))]{Utc::now().timestamp_millis()as u64}#[cfg(target_arch="wasm32")]{js_sys::Date::now()as u64}}pub fn from_millis(millis:i64)->DateTime<Utc>{DateTime::from_timestamp_millis(millis).unwrap_or_else(||{DateTime::from_timestamp(1640995200,0).unwrap()})}pub fn duration_millis(millis:i64)->Duration{Duration::milliseconds(millis)}pub fn duration_secs(secs:i64)->Duration{Duration::seconds(secs)}pub fn duration_hours(hours:i64)->Duration{Duration::hours(hours)}pub fn duration_days(days:i64)->Duration{Duration::days(days)}}
