use crate::error::Result;use std::sync::Arc;pub trait StorageBounds:Send +Sync +std::fmt::Debug{}pub type DynStorage=dyn StorageProvider;pub type StorageArc=Arc<DynStorage>;#[cfg_attr(not(target_arch="wasm32"),async_trait::async_trait)]#[cfg_attr(target_arch="wasm32",async_trait::async_trait(?Send))]pub trait StorageProvider:StorageBounds{async fn get(&self,key:&str)->Result<Option<Vec<u8>>>;async fn set(&self,key:&str,value:&[u8])->Result<()>;async fn delete(&self,key:&str)->Result<()>;async fn list_keys(&self,prefix:&str)->Result<Vec<String>>;async fn clear(&self)->Result<()>;}
